import os

from PyQt5 import uic


# import scanner
# import vuln_scanner
# import tablepassby
# from vuln_scanner import vuln_scan
import sys
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QLabel, QTextEdit, QLineEdit, QDesktopWidget, \
    QVBoxLayout
from pyqt5_plugins.examplebuttonplugin import QtGui

import scanner


class MyWindow(QWidget):

    def __init__(self):
        super().__init__()
        self.ignore_links = ["http://10.0.2.17/dvwa/logout.php"]
        self.init_ui()


    def init_ui(self):
        self.ui = uic.loadUi("./login-1.1.ui")
        self.setWindowTitle("Web Vulnerability Scanner")
        self.target_url = self.ui.inputurl
        self.login_btn = self.ui.start
        self.login_btn.clicked.connect(self.login)
        self.end_btn = self.ui.end
        self.end_btn.clicked.connect(self.end)
        self.outcome = self.ui.outcome
        self.choic = self.ui.type


        #print(self.choic.currentText())


    def login(self):
        try:
            target_url = self.target_url.text()
            self.scanner = scanner.Scanner(target_url, self.ignore_links)
            crawl_result = self.scanner.crawl()
            self.ui.geturl.setText("\n".join(crawl_result))
            #self.ui.outcome.setText("\n".join(self.scanner.output))
            selected_option = self.choic.currentText()
            if selected_option == "暴力破解":
                self.scanner.brute_force_scanner()
                for line in self.scanner.output:
                    self.ui.outcome.append(line)
                    self.ui.outcome.moveCursor(QtGui.QTextCursor.End)
            elif selected_option == "SQL注入":
                self.scanner.sqli_scanner()
                self.ui.outcome.append("\n".join(self.scanner.output))
                self.ui.outcome.moveCursor(QtGui.QTextCursor.End)
            elif selected_option == "XSS":
                self.scanner.run_scanner()
                self.ui.outcome.append("\n".join(self.scanner.output))
                self.ui.outcome.moveCursor(QtGui.QTextCursor.End)
            elif selected_option == "表单绕过":
                self.scanner.form_bypass_scanner()
                self.ui.outcome.append("\n".join(self.scanner.output))
                self.ui.outcome.moveCursor(QtGui.QTextCursor.End)
            elif selected_option == "CSRF":
                self.scanner.csrf_scanner()
                self.ui.outcome.append("\n".join(self.scanner.output))
                self.ui.outcome.moveCursor(QtGui.QTextCursor.End)
            elif selected_option == "文件包含":
                self.scanner.file_inclusion_scanner()
                self.ui.outcome.append("\n".join(self.scanner.output))
                self.ui.outcome.moveCursor(QtGui.QTextCursor.End)
            elif selected_option == "全选":
                self.scanner.brute_force_scanner()
                self.scanner.sqli_scanner()
                self.scanner.run_scanner()
                self.scanner.form_bypass_scanner()
                self.scanner.csrf_scanner()
                self.scanner.file_inclusion_scanner()
                self.ui.outcome.append("\n".join(self.scanner.output))
                self.ui.outcome.moveCursor(QtGui.QTextCursor.End)

        except Exception as e:
            self.ui.outcome.append(f"Error: {str(e)}")
            print(f"Error: {str(e)}")
        #     selected_option = self.choic.currentText()
        #     if selected_option == "暴力破解":
        #         self.scanner.brute_force_scanner()
        #         self.ui.outcome.setText("\n".join(self.scanner.output))
        #         self.ui.outcome.setText("\n".join(self.scanner.output))
        #     elif selected_option == "SQL注入":
        #         self.scanner.sqli_scanner()
        #         self.ui.outcome.setText("\n".join(self.scanner.output))
        #     elif selected_option == "XSS":
        #         self.scanner.run_scanner()
        #         self.ui.outcome.setText("\n".join(self.scanner.output))
        #     elif selected_option == "表单绕过":
        #         self.scanner.form_bypass_scanner()
        #         self.ui.outcome.setText("\n".join(self.scanner.output))
        #     elif selected_option == "CSRF":
        #         self.scanner.csrf_scanner()
        #         self.ui.outcome.setText("\n".join(self.scanner.output))
        #     elif selected_option == "文件包含":
        #         self.scanner.file_inclusion_scanner()
        #         self.ui.outcome.setText("\n".join(self.scanner.output))
        #     elif selected_option == "全选":
        #         self.scanner.brute_force_scanner()
        #         self.scanner.sqli_scanner()
        #         self.scanner.run_scanner()
        #         self.scanner.form_bypass_scanner()
        #         self.scanner.csrf_scanner()
        #         self.scanner.file_inclusion_scanner()
        #         self.ui.outcome.setText("\n".join(self.scanner.output))
        #         #self.ui.outcome.setText("\n".join(self.scanner.output))
        # except Exception as e:
        #     self.ui.outcome.setText(f"Error: {str(e)}")
        #     print(f"Error: {str(e)}")


    def end(self):
        self.ui.inputurl.setText("")
        self.ui.geturl.setText("")
        self.ui.outcome.setText("")


if __name__ == '__main__':
    app = QApplication(sys.argv)
    w = MyWindow()
    w.ui.show()

    app.exec()